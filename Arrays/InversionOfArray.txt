import java.util.* ;
import java.io.*; 
public class Solution {
    public static long getInversions(long arr[], int n) {
        // Write your code here.
        long [] temp=new long[n];
        return mergeSort(0,n-1,arr,temp);
    }
    public static long mergeSort(int left,int right,long arr[],long temp[])
    {
        long c=0;
        if(right>left)
        {
            int mid=(left+right)/2;
        c+=mergeSort(left,mid,arr,temp);
        c+=mergeSort(mid+1,right,arr,temp);
        c+=merge(left,mid+1,right,arr,temp);
        }
        
        return c;
    }
    public static long merge(int left,int mid,int right,long[] arr,long [] temp)
    {
        int i=left;
        int j=mid;
        int k=left;
        long c=0;
        while(i<=mid-1 && j<=right)
        {
            if(arr[i]<=arr[j])
            {
                temp[k++]=arr[i];
                i++;
            }       
            else
            {
                temp[k++]=arr[j];
                c+=mid-i;
                j++;      
            }  
        }
        while(i<mid)
        {
            temp[k++]=arr[i];
            i++;
        }
        while(j<=right)
        {
            temp[k++]=arr[j];
            j++;
        }
        for(int m=left;m<=right;m++)
            arr[m]=temp[m];
        return c;
    }
}